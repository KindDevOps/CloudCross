name: GitHub Actions Demo
on: [push]
jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - run: sudo apt-get install build-essential qt5-default qtbase5-dev qt5-qmake libcurl4-openssl-dev dput-ng
      - name: Check out repository code
        uses: actions/checkout@v2
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: Building...
        run: |
          mkdir ${{ github.workspace }}/build
          cd ${{ github.workspace }}/build
          ls ${{ github.workspace }}
          qmake ../CloudCross.pro
          cat Makefile
          make
      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v3
        with:
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PGP_PASSPHRASE }}
      -
        name: GPG user IDs
        run: |
          echo "fingerprint: ${{ steps.import_gpg.outputs.fingerprint }}"
          echo "keyid:       ${{ steps.import_gpg.outputs.keyid }}"
          echo "name:        ${{ steps.import_gpg.outputs.name }}"
          echo "email:       ${{ steps.import_gpg.outputs.email }}"
      - name: Packaging...
        run: |
          mkdir ${{ github.workspace }}/package_build_dir
          cd ${{ github.workspace }}/package_build_dir
          mkdir -p cloudcross/DEBIAN
          cat <<EOF >> cloudcross/DEBIAN/control
          Package: cloudcross
          Architecture: amd64
          Maintainer: kind.devops@gmail.com
          Priority: optional
          Version: 0.1
          Description: The CloudCross is a open source project for a synchronization between your devices and various cloud storages.
          EOF
          mkdir -p cloudcross/usr/bin
          cp ${{ github.workspace }}/build/ccross-app/ccross cloudcross/usr/bin/ccross
          cp ${{ github.workspace }}/build/ccross-curl-executor/ccross-curl cloudcross/usr/bin/ccross-curl
          chmod 755 cloudcross/usr/bin/ccross
          chmod 755 cloudcross/usr/bin/ccross-curl
          cd cloudcross
          debuild -k${{ steps.import_gpg.outputs.keyid }} -S
          #dpkg-deb --build cloudcross
          ls -lah ${{ github.workspace }}/package_build_dir/
          find ${{ github.workspace }}/ -name *.deb
      # - name: Upload package to ppa
      #   run: |
      #     dput ppa:kind-devops/ppa <source.changes>
      - run: echo "üçè This job's status is ${{ job.status }}."
